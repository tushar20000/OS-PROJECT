#include <stdio.h>
#include <stdlib.h>
int main()
{
	int max[10][10], required[10][10], allocated[10][10], avail[10], alreadycompleted[10], SafeSequence[10];
	int i, j, x, y, process, ct=0;
	
	printf("Enter the no of processes : ");
	scanf("%d", &x);
	for(i = 0; i< x; i++)
	{
		alreadycompleted[i] = 0;
	}
	
	printf("\n\nEnter the no of resources : "); 
	scanf("%d", &y);

	printf("\n\nEnter the Max Matrix for each process : ");
	for(i = 0; i < x; i++)
	{
		printf("\nFor process %d : ", i + 1);
		for(j = 0; j < y; j++)
		scanf("%d", &max[i][j]);
	}
	
	printf("\n\nEnter the Allocated for each process : ");
	for(i = 0; i < x; i++)
	{
		printf("\nFor process %d : ",i + 1);
		for(j = 0; j < y; j++)
		scanf("%d", &allocated[i][j]); 
	}
	
	printf("\n\nEnter the Avail Resources : ");
	for(i = 0; i < y; i++)
		scanf("%d", &avail[i]);   
	for(i = 0; i < x; i++)
		for(j = 0; j < y; j++)
			required[i][j] = max[i][j] - allocated[i][j];
	
	do
	{
		printf("\n Max Matrix:\tAllocated matrix:\n");     // Printing Max Matrix and Allocated Matrix
		for(i = 0; i < x; i++)
		{
			for( j = 0; j < y; j++)
				printf("%d ", max[i][j]);                   // Max Matrix
		
		printf("\t\t\t\t");
		for( j = 0; j < y; j++)
			printf("%d ", allocated[i][j]);                    // Allocated Matrix
		printf("\n");
		}
		
		process = -1;
		for(i = 0; i < x; i++)
		{
			if(alreadycompleted[i] == 0)                               //if not alreadycompleted
			{
				process = i ;
				for(j = 0; j < y; j++)
				{
					if(avail[j] < required[i][j])               // checking if avail resources are less than required.
					{
						process = -1;
						break;
					}
				}
			}
			if(process != -1)
			break;
		}
		if(process != -1)
		{
			printf("\nProcess %d runs to completion!", process + 1); 
			SafeSequence[ct] = process + 1;
			ct++;
			for(j = 0; j < y; j++)
			{
				avail[j] += allocated[process][j];
				allocated[process][j] = 0;
				max[process][j] = 0;
				alreadycompleted[process] = 1;
			}
		}
	}while(ct != x && process != -1);
	
	if(ct == x)
	{
		printf("\nThe system is in a safe state!!\n");
		printf("Safe Sequence : < ");
		for( i = 0; i < x; i++)
			printf("%d ", SafeSequence[i]);
		printf(">\n");
	}
	else 
		printf("\nThe system is in an unsafe state!!");

   return(0);
}





